# User interface code
type: GUITree
version: 0.6
# Default dependencies
dependencies:
- default_theme
- controls
class: RSence.GUIApp
options:
  # A short description or a name of the application. 
  # Visible in task managers and such.
  label: Hello World
  # The actual UI, rendered in the browser background.
  # A minimum requirement for a component definition is:
  # - class: HClassName
  #   rect: [x, y, w, h]
  # everything else is generally optional through options:
  # or via shortcuts, such as bind:
  # Last minute notice: 
  #  indentation is crucial with YAML
subviews:
  # Check the client side API reference:
  # http://rsence.org/client_api/HStringView.html
  # for HStringView and other standard components.
  # HStringView shows its value as a string in the UI.
  - class: HStringView
  # Coordinates,
  # http://rsence.org/client_api/HControl.html#constructor 
  # for the reference
    rect: [50, 45, 100, 60]
  # Dynamically bound value from values.yaml
    bind: :values.text_value
  # Optional parameters
    options:
    # Style property, sets CSS style, 
    # http://www.w3schools.com/css/css_reference_atoz.asp
    # for the reference
      style: 
        - ['text-align', center] 
  # Another standard component, HClickButton.
  # http://rsence.org/client_api/HClickButton.html
  # Changes its value automatically (through the server) 
  # from 0 to 1 upon click.
  - class: HClickButton
    rect: [50, 20, 100, 24]
    bind: :values.button_value
    options:
      # Label property
      label: "Click me!"

    